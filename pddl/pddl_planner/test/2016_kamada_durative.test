<launch>
  <include file="$(find pddl_planner)/demos/2016_kamada_durative/example.launch">
    <arg name="display_graph" default="false" />
    <arg name="roseus_command" default="'(progn (demo)(dotimes (i 20) (solve-pddl-planning *domain* *problem*))(exit))'" />
  </include>

  <test name="publish_test"
        test-name="2016_kamada_durative"
        pkg="rostest" type="publishtest">
    <rosparam>
      topics:
        - name: /pddl_planner/result
          timeout: 30
          negative: False
    </rosparam>
  </test>
  <!--
      durative search outputs many possible solutions, so the test becomes very stochastic process
  <test name="pddl_result_test"
        test-name="pddl_result_test"
        pkg="pddl_planner" type="pddlresulttest"
        retry="3" >
    <rosparam>
      topics:
        - name: /pddl_planner/result
          timeout: 10
          use_durative_action: true
          sequence_action:  ['MOVETOTABLE ROBOT2', 'MOVETOTABLE ROBOT1', 'PICK ROBOT1 CUP TABLECLOTH', 'PICK ROBOT2 DISH TABLECLOTH', 'PICK ROBOT1 TABLECLOTH TABLE']
          sequence_start_time: ["0.000", "0.000", "1.000", "1.000", "11.000"]
          sequence_duration: ["1.000", "1.000", "10.000", "10.000", "10.000"]
    </rosparam>
  </test>
  -->
</launch>
